# First we use a build environment to perform all our necessary actions
FROM python:3.11-slim as build
RUN apt-get update && apt-get install build-essential patchelf locales scons -y
# Although we don't need a work dir, we create one to keep our build environment clean so copying becomes easy later
WORKDIR /build
COPY . /build

# A special stage for vulnerabilities scanning
FROM build as dependencies
RUN pip install .

FROM dependencies as build-env
RUN pip install pyinstaller
RUN pip install staticx
# Since there are no requirements for this project, we can just build the binaries 
RUN pyinstaller -F helloworld/main.py -n binary --clean --strip
RUN staticx dist/binary dist/app --strip
RUN mkdir tmp

# Actual image instructions starts from here.
FROM scratch
# We copy the necessary files from the previous stage to the actual image
COPY --from=build-env /build/dist/app /app
# Executables built with pyinstaller needs a /tmp to exist
# Given that you cannot run any commands on a scratch container, we copy a /tmp from the previous stage
COPY --from=build-env /build/tmp /tmp
# Specifying an entrypoint means nothing except this command will be executed when the image is run
# Since this is also a scratch image, we cannot enter the CLI when run as a container
ENTRYPOINT ["./app"]

LABEL maintainer="dev@navs.page"
LABEL org.opencontainers.image.source=https://github.com/navhits/honey-i-shrunk-the-images-py
LABEL org.opencontainers.image.description="An experiment to shrink the size of the Python containers"
